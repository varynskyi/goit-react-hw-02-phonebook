{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App.module.css"],"names":["module","exports","ContactForm","state","name","number","change","event","currentTarget","value","setState","formSubmit","preventDefault","newState","id","uuidv4","props","contacts","filter","className","s","container","onSubmit","this","label","input","type","onChange","pattern","title","required","button","Component","ContactList","getContacts","deleteContact","map","elem","item","btn","onClick","Filter","App","element","target","find","contact","alert","prevState","inputN","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,+JCuE7HC,E,4MAjEXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,OAAS,SAAAC,GAAU,IAAD,EACd,EAAgCA,EAAMC,cAA9BJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQI,EAAtB,EAAsBA,MACtB,EAAKC,UAAL,mBAAiBN,EAAOK,GAAxB,cAAgCJ,EAASI,GAAzC,K,EAGJE,WAAa,SAAAJ,GACTA,EAAMK,iBACN,IACMC,EAAW,CACbC,GAFSC,cAGTX,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAGvB,EAAKW,MAAML,WAAWE,GACtB,EAAKH,SAAS,CACVO,SAAU,GACVC,OAAQ,GACRd,KAAM,GACNC,OAAQ,M,4CAIhB,WACI,OACI,uBAAMc,UAAWC,IAAEC,UAAWC,SAAUC,KAAKZ,WAA7C,UACI,uBAAOQ,UAAWC,IAAEI,MAApB,kBACA,uBACIL,UAAWC,IAAEK,MACbC,KAAK,OACLZ,GAAG,YACHV,KAAK,OACLK,MAAOc,KAAKpB,MAAMC,KAClBuB,SAAUJ,KAAKjB,OACfsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEZ,uBAAOX,UAAWC,IAAEI,MAApB,oBACA,uBACIL,UAAWC,IAAEK,MACbX,GAAG,cACHY,KAAK,MACLtB,KAAK,SACLK,MAAOc,KAAKpB,MAAME,OAClBsB,SAAUJ,KAAKjB,OACfsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEZ,wBAAQX,UAAWC,IAAEW,OAAQL,KAAK,SAAlC,gC,GAxDUM,a,gBCuBXC,EA1BK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAChC,OACI,qBAAKhB,UAAWC,IAAEC,UAAlB,SACI,6BACKa,EAAYE,KAAK,SAAAC,GAAI,OAClB,qBAAkBlB,UAAWC,IAAEkB,KAA/B,UACI,iCAAOD,EAAKjC,KAAZ,KAAoBiC,EAAKhC,UACzB,wBACIc,UAAWC,IAAEmB,IACbb,KAAK,SACLc,QAAS,kBAAML,EAAcE,IAHjC,sBAFKA,EAAKvB,Y,gBCiBnB2B,EAtBA,SAAC,GAAuB,IAArBhC,EAAoB,EAApBA,MAAOH,EAAa,EAAbA,OACrB,OACI,sBAAKa,UAAWC,IAAEC,UAAlB,UACI,mBAAGF,UAAWC,IAAEI,MAAhB,0BACA,uBACIE,KAAK,OACLP,UAAWC,IAAEK,MACbrB,KAAK,SACLuB,SAAUrB,EACVG,MAAOA,EACPmB,QAAQ,yHACRC,MAAM,wc,gBC6DPa,E,4MAlEbvC,MAAQ,CACNc,SAAU,CACR,CAAEH,GAAI,OAAQV,KAAM,6BAA8BC,OAAQ,aAC1D,CAAES,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,mBAAoBC,OAAQ,aAChD,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,cAEhDa,OAAQ,I,EAGVZ,OAAS,SAAAqC,GACP,EAAKjC,SAAS,CACZQ,OAAQyB,EAAQC,OAAOnC,S,EAI3BE,WAAa,SAAA2B,GACS,EAAKnC,MAAMc,SAAS4B,MACtC,SAAAC,GAAO,OAAIA,EAAQ1C,OAASkC,EAAKlC,QAM/B2C,MAAM,GAAD,OAAIT,EAAKlC,KAAT,4BAHL,EAAKM,UAAS,SAAAsC,GAAS,MAAK,CAC5B/B,SAAS,CAAEqB,GAAH,mBAAYU,EAAU/B,gB,EAKpCiB,YAAc,WACZ,IAAMe,EAAS,EAAK9C,MAAMe,OAAOgC,cACjC,OAAO,EAAK/C,MAAMc,SAASC,QAAO,SAAA4B,GAAO,OACvCA,EAAQ1C,KAAK8C,cAAcC,SAASF,O,EAIxCd,cAAgB,SAAAG,GACd,OAAO,EAAK5B,UAAS,SAAAsC,GAAS,MAAK,CACjC/B,SAAU+B,EAAU/B,SAASC,QAAO,SAAA4B,GAAO,OAAIA,EAAQhC,KAAOwB,EAAKxB,W,4CAIvE,WACE,OACE,sBAAKK,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAES,MAAjB,uBACA,cAAC,EAAD,CAAalB,WAAYY,KAAKZ,aAC9B,oBAAIQ,UAAWC,IAAES,MAAjB,sBACA,cAAC,EAAD,CAAQX,OAAQK,KAAKpB,MAAMe,OAAQZ,OAAQiB,KAAKjB,SAChD,cAAC,EAAD,CACE4B,YAAaX,KAAKW,cAClBC,cAAeZ,KAAKY,uB,GAlDZH,aCHlBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BxD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,0BAA0B,IAAM,2B,kBCApGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,sBAAsB,IAAM,sB,kBCA1HD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,sB","file":"static/js/main.ea7b9092.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__36fwU\",\"label\":\"ContactForm_label__1zQYb\",\"input\":\"ContactForm_input__HmJyH\",\"button\":\"ContactForm_button__NZbnC\"};","import React from 'react';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    change = event => {\r\n        const { name, number, value } = event.currentTarget;\r\n        this.setState({ [name]: value, [number]: value });\r\n    };\r\n\r\n    formSubmit = event => {\r\n        event.preventDefault();\r\n        let nameId = uuidv4();\r\n        const newState = {\r\n            id: nameId,\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n        };\r\n\r\n        this.props.formSubmit(newState);\r\n        this.setState({\r\n            contacts: [],\r\n            filter: '',\r\n            name: '',\r\n            number: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className={s.container} onSubmit={this.formSubmit}>\r\n                <label className={s.label}>Name</label>\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    id=\"inputName\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.change}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                <label className={s.label}>Number</label>\r\n                <input\r\n                    className={s.input}\r\n                    id=\"inputNumber\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    onChange={this.change}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n                <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    formSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ getContacts, deleteContact }) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <ul>\r\n                {getContacts.map( elem => (\r\n                    <li key={elem.id} className={s.item}>\r\n                        <span>{elem.name}: {elem.number}</span>\r\n                        <button\r\n                            className={s.btn}\r\n                            type=\"submit\"\r\n                            onClick={() => deleteContact(elem)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n  \r\nContactList.propTypes = {\r\n    getContacts: PropTypes.array.isRequired,\r\n    deleteeContact: PropTypes.func.isRequired,\r\n};\r\n \r\nexport default ContactList;\r\n\r\n\r\n    ","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, change }) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <p className={s.label}>Find contact</p>\r\n            <input\r\n                type=\"text\"\r\n                className={s.input}\r\n                name=\"filter\"\r\n                onChange={change}\r\n                value={value}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    change: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Denzel Hayes Washington Jr', number: '459-12-56' },\n      { id: 'id-2', name: 'Julia Roberts', number: '443-89-12' },\n      { id: 'id-3', name: 'Jennifer Aniston', number: '645-17-79' },\n      { id: 'id-4', name: 'Robert De Niro', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  change = element => {\n    this.setState({\n      filter: element.target.value,\n    });\n  };\n  \n  formSubmit = item => {\n    const findContact = this.state.contacts.find(\n      contact => contact.name === item.name,\n    );\n    !findContact\n      ? this.setState(prevState => ({\n        contacts: [item, ...prevState.contacts],\n      }))\n      : alert(`${item.name} is already in contacts`);\n  };\n  \n  getContacts = () => {\n    const inputN = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(inputN),\n      );\n  };\n\n  deleteContact = item => {\n    return this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== item.id),\n    }));\n  };\n   \n  render() {\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm formSubmit={this.formSubmit} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={this.state.filter} change={this.change} />\n        <ContactList\n          getContacts={this.getContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n  \nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__fgfwS\",\"item\":\"ContactList_item__SzUI5\",\"btn\":\"ContactList_btn__3oX-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2mixZ\",\"label\":\"Filter_label__QFN65\",\"input\":\"Filter_input__227Bg\",\"btn\":\"Filter_btn__3epdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3EPLU\",\"title\":\"App_title__KPFYF\"};"],"sourceRoot":""}